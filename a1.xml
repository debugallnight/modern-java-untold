<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.test</groupId>
  <artifactId>mymy-services</artifactId>
  <version>13.0.0-SNAPSHOT</version>
  <name>mymy Services</name>
  <packaging>jar</packaging>

	<repositories>
		<repository>
			<id>mymy</id>
			<name>mymy Repository</name>
			<url>http://com.test:8888/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>deprecated_mymy</id>
			<name>Deprecated mymy Repository</name>
			<url>http://com.test:8888/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>guice-maven</id>
			<name>guice maven</name>
			<url>http://guice-maven.googlecode.com/svn/trunk</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.test</groupId>
				<artifactId>bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<distributionManagement>
		<repository>
			<id>mymy</id>
			<name>Internal Releases</name>
			<url>http://com.test:8888/nexus/content/repositories/releases</url>
		</repository>

		<snapshotRepository>
			<id>mymy</id>
			<name>Internal Snapshots</name>
			<url>http://com.test:8888/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<properties>
		<skipITs>true</skipITs>
	</properties>

	<build>
		<resources>
			<resource>
				<!-- this should pull in your .hbm.xml files -->
				<directory>${project.basedir}/src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!-- Ignore/Execute plugin execution -->
				<!-- We need this so the dependency:unpack goal is still executed in 
					eclipse which allows us to pull in our hibernate mappings -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- unpack-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<doclint>none</doclint>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
                    <skipITs>${skipITs}</skipITs>
          	    </configuration>
				<version>2.15</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.test</groupId>
									<artifactId>mymy-configuration</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/test-hibernate-mappings</outputDirectory>
									<includes>**/*.xml</includes>
									<excludes />
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<argLine>-Xmx1024m</argLine>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx1024m</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>

		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		


	</dependencies>

	<profiles>
		<profile>
			<id>jrebel</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>javarebel-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sonar</id>
			<activation>
				<property>
					<name>environment</name>
					<value>sonarAnalysis</value>
				</property>
			</activation>
			<properties>
				<sonar.host.url>http://url:9000</sonar.host.url>
				<sonar.jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</sonar.jdbc.driverClassName>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar_user</sonar.jdbc.password>
				<sonar.jdbc.url>jdbc:jtds:sqlserver://mymysqldev/sonar;SelectMethod=Cursor</sonar.jdbc.url>
			</properties>
			<dependencies>


				<dependency>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
					<version>2.6</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
